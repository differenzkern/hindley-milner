type Bool = True | False
type Nat = Z | S Nat

fun neg x = match x {
  | True → False
  | False → True
}

fun or x y = match x {
  | True → True
  | False → y
}

fun and x y = match x {
  | True → y
  | False → False
}

fun xor x y = match x {
  | True → match y {
    | False → True
    | True → False
  }
  | False → y
}

fun if x a b = match x {
  | True → a
  | False → b
}

